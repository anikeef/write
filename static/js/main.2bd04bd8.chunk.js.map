{"version":3,"sources":["components/MarkdownRender.js","components/Editor.js","components/ToggleEditor.js","components/SaveButton.js","services/MyJsonService.js","config.js","services/StorageService.js","components/Loading.js","components/LiveEditor.js","components/MarkdownViewer.js","App.js","index.js"],"names":["MarkdownRender","props","newProps","plugins","RemarkMathPlugin","renderers","math","value","inlineMath","Editor","onChange","autoFocus","className","placeholder","ToggleEditor","onClick","SaveButton","url","savingInfo","shouldShowSavingInfo","disabled","document","addEventListener","alert","MyJsonService","post","body","window","fetch","method","headers","JSON","stringify","then","result","json","get","id","config","location","host","StorageService","createLink","text","markdown","uriBase","uri","split","slice","error","console","log","getMarkdown","cacheMarkdown","localStorage","setItem","getCachedMarkdown","getItem","Loading","LiveEditor","presetId","state","fullScreen","generatedURI","isLoading","setState","handleChange","bind","toggleEditor","handleSave","this","source","event","target","React","Component","MarkdownViewer","match","params","App","basename","baseName","exact","path","component","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2bd04bd8.chunk.js","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport RemarkMathPlugin from 'remark-math';\nimport 'katex/dist/katex.min.css';\nimport { InlineMath, BlockMath } from 'react-katex';\n\nexport const MarkdownRender = (props) => {\n  const newProps = {\n    ...props,\n    plugins: [\n      RemarkMathPlugin,\n    ],\n    renderers: {\n      ...props.renderers,\n      math: ({ value }) => <BlockMath>{ value }</BlockMath>,\n      inlineMath: ({ value }) => <InlineMath>{ value }</InlineMath>,\n    }\n  };\n  return (\n    <ReactMarkdown {...newProps} />\n  );\n};","import React from 'react';\n\nexport const Editor = ({ onChange, value }) => {\n  return (\n    <textarea autoFocus className=\"editor\" onChange={ onChange } value={ value }\n    placeholder=\"Enter your markdown\"></textarea>\n  )\n}","import React from 'react';\n\nexport const ToggleEditor = ({ onClick }) => {\n  return (\n    <div className=\"output__toggle-editor\" onClick={ onClick }>\n      <span className=\"icon icon-arrow-left output__toggle-button\"></span>\n    </div>\n  )\n}","import React from 'react';\n\nexport const SaveButton = ({ onClick, url, shouldShowSavingInfo }) => {\n  const savingInfo = shouldShowSavingInfo ? \n    <input className=\"save-info\" placeholder=\"Wait...\" disabled value={ url }></input> : null\n\n  document.addEventListener(\"document:click\", () => {\n    alert(\"af\");\n  })\n\n  return (\n    <div className=\"save-container\">\n      { savingInfo }\n      <button className=\"save-button\" onClick={ onClick }>\n        <span className=\"icon icon-fullscreen\"></span>\n      </button>\n      \n    </div>\n  );\n}","export const MyJsonService = (function() {\n  const post = (body) => {\n    return window.fetch('https://api.myjson.com/bins', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(\n      (result) => result.json(),\n    );\n  }\n\n  const get = (id) => {\n    return window.fetch('https://api.myjson.com/bins/' + id)\n      .then(\n        (result) => result.json()\n      )\n  }\n\n\n  return { post, get }\n})()","export const config = {\n  get uriBase() {\n    return (window.location.host === \"localhost:3000\") ? \n      \"localhost:3000/\" : \"https://anikeef.github.io/write/\";\n  },\n\n  get baseName() {\n    return (window.location.host === \"localhost:3000\") ? \n      \"/\" : \"write/\";\n  }\n}","import { MyJsonService } from './MyJsonService';\nimport { config } from '../config';\n\nexport const StorageService = (function() {\n  const _extractIdFromURI = (uri) => {\n    return uri.split(\"/\").slice(-1);\n  }\n\n  const getCachedMarkdown = () => {\n    return window.localStorage.getItem('markdown') || '';\n  }\n\n  const createLink = (text) => {\n    return MyJsonService.post({ markdown: text })\n      .then(\n        (json) => config.uriBase + _extractIdFromURI(json.uri),\n        (error) => console.log(error)\n      );\n  }\n\n  const getMarkdown = (id) => {\n    return MyJsonService.get(id).then(\n        (json) => json.markdown,\n        (error) => console.log(error)\n      )\n  }\n\n  const cacheMarkdown = (markdown) => {\n    window.localStorage.setItem('markdown', markdown);\n  }\n\n  return { createLink, getMarkdown, cacheMarkdown, getCachedMarkdown };\n})();","import React from 'react';\nimport { HashLoader } from 'react-spinners';\n\nexport const Loading = () => {\n  return (\n    <div className=\"loading\">\n      <HashLoader></HashLoader>\n    </div>\n    \n  );\n}","import React from 'react';\n\nimport { MarkdownRender } from \"./MarkdownRender\";\nimport { Editor } from \"./Editor\";\nimport { ToggleEditor } from \"./ToggleEditor\";\nimport { SaveButton } from \"./SaveButton\";\nimport { StorageService } from '../services/StorageService';\nimport { Loading } from './Loading';\n\nexport class LiveEditor extends React.Component {\n  constructor({ presetId }) {\n    super();\n    this.state = {\n      markdown: StorageService.getCachedMarkdown(),\n      fullScreen: false,\n      generatedURI: \"\",\n      shouldShowSavingInfo: false,\n      isLoading: !!presetId\n    }\n\n    if (presetId) {\n      StorageService.getMarkdown(presetId)\n      .then((markdown) => {\n        this.setState({ \n          markdown: markdown,\n          isLoading: false\n        })\n      });\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleEditor = this.toggleEditor.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <Loading />\n    }\n\n    return (\n      <div className=\"live-editor\">\n        <Editor value={ this.state.markdown }onChange={ this.handleChange }/>\n        <div className={ \"output\" + (this.state.fullScreen ? \" output_fullscreen\" : \"\")}>\n          <SaveButton url={ this.state.generatedURI } onClick={ this.handleSave } \n          shouldShowSavingInfo={ this.state.shouldShowSavingInfo } />\n          <ToggleEditor onClick={ this.toggleEditor }/>\n          <div className=\"output__content\">\n            <MarkdownRender source={ this.state.markdown }></MarkdownRender>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleChange(event) {\n    this.setState({\n      markdown: event.target.value,\n      shouldShowSavingInfo: false,\n      generatedURI: \"\"\n    });\n    StorageService.cacheMarkdown(event.target.value);\n  }\n\n  toggleEditor() {\n    this.setState({\n      fullScreen: !this.state.fullScreen\n    });\n  }\n\n  handleSave() {\n    this.setState({ shouldShowSavingInfo: !this.state.shouldShowSavingInfo });\n    if (this.state.generatedURI) return;\n    StorageService.createLink(this.state.markdown)\n      .then(\n        (uri) => {\n          this.setState({\n            generatedURI: uri\n          })\n        }\n      );\n  }\n}\n","import React from 'react';\n\nimport { MarkdownRender } from \"./MarkdownRender\";\nimport { StorageService } from '../services/StorageService';\nimport { Loading } from './Loading';\n\nexport class MarkdownViewer extends React.Component {\n  constructor({ match }) {\n    super();\n    this.state = {\n      markdown: \"\",\n      isLoading: true\n    }\n    StorageService.getMarkdown(match.params.id)\n      .then((markdown) => {\n        this.setState({ \n          markdown: markdown,\n          isLoading: false\n        })\n      });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <Loading />\n    }\n\n    return (\n      <div className=\"output output_fullscreen\">\n        <div className=\"output__content\">\n          <MarkdownRender source={ this.state.markdown } />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { LiveEditor } from './components/LiveEditor';\nimport { MarkdownViewer } from './components/MarkdownViewer';\nimport { config } from './config';\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={ config.baseName }>\n      <Switch>\n        <Route exact path='/' component={ LiveEditor } />\n        <Route exact path='/:id' component={ MarkdownViewer } />\n        <Route path='/:id/edit' render={ ({ match }) => {\n          console.log(match);\n          return <LiveEditor presetId={match.params.id} /> ;\n        } }/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}