{"version":3,"sources":["components/MarkdownRender.js","components/Editor.js","components/ToggleEditor.js","components/SaveInfo.js","components/SaveButton.js","services/MyJsonService.js","config.js","services/StorageService.js","components/Loading.js","components/LiveEditor.js","components/MarkdownViewer.js","App.js","index.js"],"names":["MarkdownRender","props","newProps","plugins","RemarkMathPlugin","renderers","math","value","inlineMath","code","Editor","onChange","autoFocus","className","placeholder","ToggleEditor","onClick","SaveInfo","this","url","shouldShow","href","target","rel","document","addEventListener","close","removeEventListener","React","Component","SaveButton","container","handleClose","bind","shouldShowSavingInfo","ref","node","event","contains","closeSavingInfo","MyJsonService","post","body","window","fetch","method","headers","JSON","stringify","then","result","json","get","id","config","location","host","StorageService","createLink","text","markdown","uriBase","uri","split","slice","error","console","log","getMarkdown","cacheMarkdown","localStorage","setItem","getCachedMarkdown","getItem","Loading","LiveEditor","presetId","state","fullScreen","generatedURI","toString","isLoading","setState","handleChange","toggleEditor","handleSave","source","MarkdownViewer","match","params","App","basename","baseName","exact","path","component","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.94c2fd11.chunk.js","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport RemarkMathPlugin from 'remark-math';\nimport 'katex/dist/katex.min.css';\nimport 'highlight.js/styles/default.css';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport Highlight from 'react-highlight';\n\nexport const MarkdownRender = (props) => {\n  const newProps = {\n    ...props,\n    plugins: [\n      RemarkMathPlugin,\n    ],\n    renderers: {\n      ...props.renderers,\n      math: ({ value }) => <BlockMath>{ value }</BlockMath>,\n      inlineMath: ({ value }) => <InlineMath>{ value }</InlineMath>,\n      code: ({ value }) => <Highlight>{ value }</Highlight>\n    }\n  };\n  return (\n    <ReactMarkdown {...newProps} />\n  );\n};","import React from 'react';\n\nexport const Editor = ({ onChange, value }) => {\n  return (\n    <textarea autoFocus className=\"editor\" onChange={ onChange } value={ value }\n    placeholder=\"Enter your markdown\"></textarea>\n  )\n}","import React from 'react';\n\nexport const ToggleEditor = ({ onClick }) => {\n  return (\n    <div className=\"output__toggle-editor\" onClick={ onClick }>\n      <span className=\"icon icon-arrow-left output__toggle-button\"></span>\n    </div>\n  )\n}","import React from 'react';\n\nexport class SaveInfo extends React.Component {\n  render() {\n    const { url, shouldShow } = this.props;\n    if (!shouldShow) return null;\n    return (\n      <div className=\"save-info\">\n        { (url) ? <a className=\"saved-link\" href={ url } target=\"_blank\" rel=\"noopener noreferrer\">{ url }</a> : \"Wait...\" }\n      </div>\n    );\n      \n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.props.close);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.props.close);\n  }\n}","import React from 'react';\nimport { SaveInfo } from './SaveInfo';\n\nexport class SaveButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.container = null;\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  render() {\n    const { onClick, url, shouldShowSavingInfo } = this.props;\n    return (\n      <div className=\"save-container\" ref={ (node) => this.container = node }>\n        <SaveInfo url={ url } shouldShow={ shouldShowSavingInfo } close={ this.handleClose } />\n        <button className=\"save-button\" onClick={ onClick }>\n          <span className=\"icon icon-fullscreen\"></span>\n        </button>\n      </div>\n    );\n  }\n\n  handleClose(event) {\n    if (!this.container.contains(event.target)) {\n      this.props.closeSavingInfo();\n    }\n  }\n}","export const MyJsonService = (function() {\n  const post = (body) => {\n    return window.fetch('https://api.myjson.com/bins', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(\n      (result) => result.json(),\n    );\n  }\n\n  const get = (id) => {\n    return window.fetch('https://api.myjson.com/bins/' + id)\n      .then(\n        (result) => result.json()\n      )\n  }\n\n\n  return { post, get }\n})()","export const config = {\n  get uriBase() {\n    return (window.location.host === \"localhost:3000\") ? \n      \"localhost:3000/\" : \"https://anikeef.github.io/write/\";\n  },\n\n  get baseName() {\n    return (window.location.host === \"localhost:3000\") ? \n      \"/\" : \"write/\";\n  }\n}","import { MyJsonService } from './MyJsonService';\nimport { config } from '../config';\n\nexport const StorageService = (function() {\n  const _extractIdFromURI = (uri) => {\n    return uri.split(\"/\").slice(-1);\n  }\n\n  const getCachedMarkdown = () => {\n    return window.localStorage.getItem('markdown') || '';\n  }\n\n  const createLink = (text) => {\n    return MyJsonService.post({ markdown: text })\n      .then(\n        (json) => config.uriBase + _extractIdFromURI(json.uri),\n        (error) => console.log(error)\n      );\n  }\n\n  const getMarkdown = (id) => {\n    return MyJsonService.get(id).then(\n        (json) => json.markdown,\n        (error) => console.log(error)\n      )\n  }\n\n  const cacheMarkdown = (markdown) => {\n    window.localStorage.setItem('markdown', markdown);\n  }\n\n  return { createLink, getMarkdown, cacheMarkdown, getCachedMarkdown };\n})();","import React from 'react';\nimport { HashLoader } from 'react-spinners';\n\nexport const Loading = () => {\n  return (\n    <div className=\"loading\">\n      <HashLoader></HashLoader>\n    </div>\n    \n  );\n}","import React from 'react';\n\nimport { MarkdownRender } from \"./MarkdownRender\";\nimport { Editor } from \"./Editor\";\nimport { ToggleEditor } from \"./ToggleEditor\";\nimport { SaveButton } from \"./SaveButton\";\nimport { StorageService } from '../services/StorageService';\nimport { Loading } from './Loading';\n\nexport class LiveEditor extends React.Component {\n  constructor({ presetId }) {\n    super();\n    this.state = {\n      markdown: StorageService.getCachedMarkdown(),\n      fullScreen: false,\n      generatedURI: presetId ? window.location.toString().slice(0, -5) : '',\n      shouldShowSavingInfo: false,\n      isLoading: !!presetId\n    }\n\n    if (presetId) {\n      StorageService.getMarkdown(presetId)\n      .then((markdown) => {\n        this.setState({ \n          markdown: markdown,\n          isLoading: false\n        })\n      });\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleEditor = this.toggleEditor.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.closeSavingInfo = this.closeSavingInfo.bind(this);\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <Loading />\n    }\n\n    return (\n      <div className=\"live-editor\">\n        <Editor value={ this.state.markdown }onChange={ this.handleChange }/>\n        <div className={ \"output\" + (this.state.fullScreen ? \" output_fullscreen\" : \"\")}>\n          <SaveButton url={ this.state.generatedURI } onClick={ this.handleSave } \n          shouldShowSavingInfo={ this.state.shouldShowSavingInfo } closeSavingInfo={ this.closeSavingInfo }/>\n          <ToggleEditor onClick={ this.toggleEditor }/>\n          <div className=\"output__content\">\n            <MarkdownRender source={ this.state.markdown }></MarkdownRender>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleChange(event) {\n    this.setState({\n      markdown: event.target.value,\n      shouldShowSavingInfo: false,\n      generatedURI: \"\"\n    });\n    StorageService.cacheMarkdown(event.target.value);\n  }\n\n  toggleEditor() {\n    this.setState({\n      fullScreen: !this.state.fullScreen\n    });\n  }\n\n  handleSave() {\n    this.setState({ shouldShowSavingInfo: !this.state.shouldShowSavingInfo });\n    if (this.state.generatedURI) return;\n    StorageService.createLink(this.state.markdown)\n      .then(\n        (uri) => {\n          this.setState({\n            generatedURI: uri\n          })\n        }\n      );\n  }\n\n  closeSavingInfo() {\n    if (this.state.shouldShowSavingInfo) {\n      this.setState({ shouldShowSavingInfo: false })\n    }\n  }\n}\n","import React from 'react';\n\nimport { MarkdownRender } from \"./MarkdownRender\";\nimport { StorageService } from '../services/StorageService';\nimport { Loading } from './Loading';\n\nexport class MarkdownViewer extends React.Component {\n  constructor({ match }) {\n    super();\n    this.state = {\n      markdown: \"\",\n      isLoading: true\n    }\n    StorageService.getMarkdown(match.params.id)\n      .then((markdown) => {\n        this.setState({ \n          markdown: markdown,\n          isLoading: false\n        })\n      });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <Loading />\n    }\n\n    return (\n      <div className=\"output output_fullscreen\">\n        <div className=\"output__content\">\n          <MarkdownRender source={ this.state.markdown } />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { LiveEditor } from './components/LiveEditor';\nimport { MarkdownViewer } from './components/MarkdownViewer';\nimport { config } from './config';\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={ config.baseName }>\n      <Switch>\n        <Route exact path='/' component={ LiveEditor } />\n        <Route exact path='/:id' component={ MarkdownViewer } />\n        <Route path='/:id/edit' render={ ({ match }) => {\n          console.log(match);\n          return <LiveEditor presetId={match.params.id} /> ;\n        } }/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}